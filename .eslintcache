[{"/home/jerk/Learn/to-do/src/App.js":"1","/home/jerk/Learn/to-do/src/reportWebVitals.js":"2","/home/jerk/Learn/to-do/src/Task.js":"3","/home/jerk/Learn/to-do/src/Control.js":"4","/home/jerk/Learn/to-do/src/index.js":"5","/home/jerk/Learn/to-do/src/AddTask.js":"6"},{"size":1207,"mtime":1609071867991,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1608573981393,"results":"9","hashOfConfig":"8"},{"size":355,"mtime":1609062084037,"results":"10","hashOfConfig":"8"},{"size":520,"mtime":1609078523586,"results":"11","hashOfConfig":"8"},{"size":500,"mtime":1608573981389,"results":"12","hashOfConfig":"8"},{"size":965,"mtime":1609078582897,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1fno403",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jerk/Learn/to-do/src/App.js",["28"],"import './App.css';\nimport Task from './Task';\nimport Control from './Control';\nimport AddTask from './AddTask';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [taskList,setTaskList] = useState([{\"id\":1,\"desciption\":\"Learn React\"},{\"id\":2,\"desciption\":\"Learn NodeJS\"}]);\n  const [showAddNewTask,setShowAddNewTask] = useState(false);\n  \n  const addNewTask = (taskDescription) => {\n    setTaskList([...taskList,{id:taskList.length+1,desciption:taskDescription}]);\n    setShowAddNewTask(false);\n  }\n\n  const showAddTask = ()=>{\n    setShowAddNewTask(!showAddNewTask);\n  }\n\n  const handleRemove = (taskId)=>{\n    setTaskList(taskList.filter((task,index)=>{\n      return taskId !== task.id\n    }));\n  }\n\n  const handleCloseAddTask = () => {\n    setShowAddNewTask(false);\n  }\n  return (\n    <div className=\"app\">\n      <div className=\"app__tasks\">\n        {taskList.map((task) => <Task description={task.desciption} key={task.id} taskId={task.id} handleRemove={handleRemove} />)}\n      </div>\n      <Control handleShowAddTask={showAddTask}/>\n      {showAddNewTask && <AddTask handleNewAddTask={addNewTask} handleCloseAddTask={handleCloseAddTask}/>} \n    </div>\n  );\n}\n\nexport default App;\n","/home/jerk/Learn/to-do/src/reportWebVitals.js",[],"/home/jerk/Learn/to-do/src/Task.js",[],"/home/jerk/Learn/to-do/src/Control.js",[],"/home/jerk/Learn/to-do/src/index.js",[],["29","30"],"/home/jerk/Learn/to-do/src/AddTask.js",["31"],{"ruleId":"32","severity":1,"message":"33","line":5,"column":10,"nodeType":"34","messageId":"35","endLine":5,"endColumn":19},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"32","severity":1,"message":"40","line":8,"column":11,"nodeType":"34","messageId":"35","endLine":8,"endColumn":18},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["41"],"no-negated-in-lhs",["42"],"'addTask' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]