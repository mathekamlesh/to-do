[{"/home/jerk/Learn/to-do/src/App.js":"1","/home/jerk/Learn/to-do/src/reportWebVitals.js":"2","/home/jerk/Learn/to-do/src/Task.js":"3","/home/jerk/Learn/to-do/src/Control.js":"4","/home/jerk/Learn/to-do/src/index.js":"5","/home/jerk/Learn/to-do/src/AddTask.js":"6"},{"size":1207,"mtime":1609071867991,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1608573981393,"results":"9","hashOfConfig":"8"},{"size":355,"mtime":1609062084037,"results":"10","hashOfConfig":"8"},{"size":628,"mtime":1609072546967,"results":"11","hashOfConfig":"8"},{"size":500,"mtime":1608573981389,"results":"12","hashOfConfig":"8"},{"size":993,"mtime":1609074311789,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1fno403",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/home/jerk/Learn/to-do/src/App.js",["30"],"import './App.css';\nimport Task from './Task';\nimport Control from './Control';\nimport AddTask from './AddTask';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [taskList,setTaskList] = useState([{\"id\":1,\"desciption\":\"Learn React\"},{\"id\":2,\"desciption\":\"Learn NodeJS\"}]);\n  const [showAddNewTask,setShowAddNewTask] = useState(false);\n  \n  const addNewTask = (taskDescription) => {\n    setTaskList([...taskList,{id:taskList.length+1,desciption:taskDescription}]);\n    setShowAddNewTask(false);\n  }\n\n  const showAddTask = ()=>{\n    setShowAddNewTask(!showAddNewTask);\n  }\n\n  const handleRemove = (taskId)=>{\n    setTaskList(taskList.filter((task,index)=>{\n      return taskId !== task.id\n    }));\n  }\n\n  const handleCloseAddTask = () => {\n    setShowAddNewTask(false);\n  }\n  return (\n    <div className=\"app\">\n      <div className=\"app__tasks\">\n        {taskList.map((task) => <Task description={task.desciption} key={task.id} taskId={task.id} handleRemove={handleRemove} />)}\n      </div>\n      <Control handleShowAddTask={showAddTask}/>\n      {showAddNewTask && <AddTask handleNewAddTask={addNewTask} handleCloseAddTask={handleCloseAddTask}/>} \n    </div>\n  );\n}\n\nexport default App;\n","/home/jerk/Learn/to-do/src/reportWebVitals.js",[],"/home/jerk/Learn/to-do/src/Task.js",[],"/home/jerk/Learn/to-do/src/Control.js",["31","32"],"import React from 'react';\nimport './Control.css';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nconst Control = ({handleShowAddTask}) => {\n    const styles =  {\n          width: 100,\n          height: 100,\n          fill:\"#ffffff\",\n      };\n    const handleClick = () => {\n        console.log(\"Clicked\")\n    }\n    const openAddControl = () => {\n\n    };\n    return ( \n        <div className='control'>\n            <div className=\"control__addControl\" onClick={handleShowAddTask}>\n                <AddCircleIcon  fontSize=\"large\" style={styles} />\n            </div>\n        </div>\n    );\n}\n \nexport default Control;","/home/jerk/Learn/to-do/src/index.js",[],["33","34"],"/home/jerk/Learn/to-do/src/AddTask.js",["35"],"import { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport './AddTask.css';\nconst AddTask = ({handleNewAddTask,handleCloseAddTask}) => {\n\n    const [taskDescription,setTaskDescription] = useState('');\n    \n    const addTask = () => {\n\n    }\n    return ( \n        <div className=\"addTask\">\n            <div className=\"addTask__control\">\n                <div className=\"addTask__text\">\n                    <textarea className=\"addTask__textInput\" onChange={(e)=>{setTaskDescription(e.target.value);console.log(taskDescription)}}/>\n                </div>\n                <div className=\"addTask__button\" >\n                    <Button variant=\"contained\" onClick={()=>{handleNewAddTask(taskDescription)}} color=\"primary\" size=\"large\" >Add Task</Button>\n                </div>                \n            </div>\n            <div className=\"addTask_overlay\" onClick={handleCloseAddTask}>\n\n            </div>\n        </div>        \n     );\n}\n \nexport default AddTask;",{"ruleId":"36","severity":1,"message":"37","line":5,"column":10,"nodeType":"38","messageId":"39","endLine":5,"endColumn":19},{"ruleId":"36","severity":1,"message":"40","line":11,"column":11,"nodeType":"38","messageId":"39","endLine":11,"endColumn":22},{"ruleId":"36","severity":1,"message":"41","line":14,"column":11,"nodeType":"38","messageId":"39","endLine":14,"endColumn":25},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"36","severity":1,"message":"46","line":8,"column":11,"nodeType":"38","messageId":"39","endLine":8,"endColumn":18},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'handleClick' is assigned a value but never used.","'openAddControl' is assigned a value but never used.","no-native-reassign",["47"],"no-negated-in-lhs",["48"],"'addTask' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]